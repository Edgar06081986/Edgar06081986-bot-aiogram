from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from datetime import datetime
import os

from bot.keyboards import (
    get_main_menu_keyboard,
    get_format_keyboard,
    get_paper_type_keyboard,
    get_confirm_keyboard,
    get_contact_keyboard
)
from bot.states import OrderStates
from bot.logger import log_user_event, LogTypesEnum
from bot.services.google_api_service import google_api

router = Router()

# --- –ü—Ä–∞–π—Å-–ª–∏—Å—Ç ---
PRICE_LIST = {
    "10x15": 20,
    "15x21": 40,
    "–§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã": 100
}

def calculate_price(format_: str, option: str) -> int:
    base_price = PRICE_LIST.get(format_, 0)
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É –∑–∞ –æ–ø—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    return base_price

def generate_order_id(user_id: int) -> str:
    return f"{user_id}_{datetime.now().strftime('%Y%m%d%H%M%S')}"

async def save_photo(message: Message, photo_file_id: str, order_id: str):
    file = await message.bot.get_file(photo_file_id)
    file_path = file.file_path
    os.makedirs("images", exist_ok=True)
    destination = f"images/{order_id}.jpg"
    await message.bot.download_file(file_path, destination)
    return destination

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ü–µ–Ω—Ç—Ä —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )

@router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω—Ç—Ä–µ")
async def info_handler(message: Message):
    await message.answer(
        " FastEdition ‚Äì —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–µ—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ —Å –±—ã—Å—Ç—Ä—ã–º –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º "'\n'
        "üöÄ –°–∫–æ—Ä–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å‚Äì –º—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –≤—Ä–µ–º—è, –ø–æ—ç—Ç–æ–º—É –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–∫–∞–∑—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞."'\n'  
        "üñ®Ô∏è –®–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥:"'\n'  
        "- –ü–µ—á–∞—Ç—å –≤–∏–∑–∏—Ç–æ–∫, –±—É–∫–ª–µ—Ç–æ–≤, –ª–∏—Å—Ç–æ–≤–æ–∫"'\n'  
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –±—Ä–æ—à—é—Ä, –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –∂—É—Ä–Ω–∞–ª–æ–≤"'\n'  
        "- –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª—å–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –∏ –ø–ª–∞–∫–∞—Ç–æ–≤"'\n'  
        "- –ü–µ—á–∞—Ç—å –Ω–∞ —Ñ–æ—Ç–æ–±—É–º–∞–≥–µ, —Å–∞–º–æ–∫–ª–µ—è—â–µ–π—Å—è –ø–ª–µ–Ω–∫–µ"'\n'  
        "- –ü–æ—Å–ª–µ–ø–µ—á–∞—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–∏–≥–æ–≤–∫–∞, —Ñ–∞–ª—å—Ü–æ–≤–∫–∞, —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)"  
        "- –®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å"'\n'
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–∏–Ω–∏–ª–æ–≤—ã—Ö –º–∞–≥–Ω–∏—Ç–æ–≤"'\n'
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∫–ª–µ–µ–∫, —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤"'\n'
        "- –ü–ª–æ—Ç—Ç–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞"'\n'
        "- –ü–µ—á–∞—Ç—å, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"'\n'
        "- –ù–∞—Ä—É–∂–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞"'\n'
        "- –§–æ—Ç–æ–ø–µ—á–∞—Ç—å"'\n'
        "- –§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã"'\n'
        "- –ë—Ä–æ—à—é—Ä–æ–≤–∫–∞, —Ç–≤–µ—Ä–¥—ã–π –ø–µ—Ä–µ–ø–ª–µ—Ç"'\n'
        "- –ø–µ—á–∞—Ç–∏ –∏ —à—Ç–∞–º–ø—ã"'\n'


        "üí° –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ ‚Äì —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ –¥–ª—è –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞."'\n'  

        "üé® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äì –ø–æ–º–æ–∂–µ–º —Å –¥–∏–∑–∞–π–Ω–æ–º –∏–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à–∏ –º–∞–∫–µ—Ç—ã."'\n'  

        "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞, —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–≤—ã–≤–æ–∑."'\n' 

        "–í—ã–±–∏—Ä–∞–π—Ç–µ FastEdition ‚Äì –≥–¥–µ –∫–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –∑–∞–±–æ—Ç–æ–π –æ –≤–∞—à–µ–º —É—Å–ø–µ—Ö–µ!"'\n'  

        "üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: +7 915 134 46 44 (—Ç–µ–ª–µ–≥—Ä–∞–º–º, –≤–∞—Ç—Å–∞–ø) @fastedition (—Ç–µ–ª–µ–≥—Ä–∞–º)"'\n'

    )

@router.message(F.text == "–ù–∞—à–∏ —É—Å–ª—É–≥–∏")
async def services_handler(message: Message):
    # services = await google_api.get_services_list()  # –ï—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    services = "1. –§–æ—Ç–æ 10x15 ‚Äî 20‚ÇΩ\n2. –§–æ—Ç–æ 15x21 ‚Äî 40‚ÇΩ\n3. –§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã ‚Äî 100‚ÇΩ"
    await message.answer(f"–ù–∞—à–∏ —É—Å–ª—É–≥–∏:\n{services}")

# --- –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–∫–∞–∑–∞ ---

@router.message(F.text == "–ó–∞–∫–∞–∑–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ")
async def start_order(message: Message, state: FSMContext):
    await state.set_state(OrderStates.choosing_format)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:",
        reply_markup=get_format_keyboard()
    )

@router.message(OrderStates.choosing_format, F.text)
async def choose_format(message: Message, state: FSMContext):
    format_ = message.text
    if format_ not in PRICE_LIST:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=get_format_keyboard())
        return
    await state.update_data(format=format_)
    await state.set_state(OrderStates.choosing_options)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É–º–∞–≥–∏:",
        reply_markup=get_paper_type_keyboard()
    )

@router.message(OrderStates.choosing_options, F.text)
async def choose_options(message: Message, state: FSMContext):
    option = message.text
    if option not in ["–ì–ª—è–Ω—Ü–µ–≤–∞—è", "–ú–∞—Ç–æ–≤–∞—è", "–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã"]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É–º–∞–≥–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=get_paper_type_keyboard())
        return
    await state.update_data(option=option)
    await state.set_state(OrderStates.uploading_image)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é (JPG/PNG, –¥–æ 20 –ú–ë):",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(OrderStates.uploading_image, F.photo)
async def upload_image(message: Message, state: FSMContext):
    photo = message.photo[-1]
    if photo.file_size > 20 * 1024 * 1024:
        await message.answer("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 20 –ú–ë.")
        return
    await state.update_data(photo_file_id=photo.file_id)
    await state.set_state(OrderStates.preview_and_confirm)
    data = await state.get_data()
    price = calculate_price(data.get("format"), data.get("option"))
    await message.answer_photo(
        photo.file_id,
        caption=f"–í–æ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–≥–æ —Ñ–æ—Ç–æ.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {price}‚ÇΩ\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑?",
        reply_markup=get_confirm_keyboard()
    )

@router.message(OrderStates.preview_and_confirm, F.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
async def confirm_order(message: Message, state: FSMContext):
    await state.set_state(OrderStates.waiting_for_contact)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=get_contact_keyboard()
    )

@router.message(OrderStates.preview_and_confirm, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.choosing_format, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.choosing_options, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.uploading_image, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.waiting_for_contact, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def cancel_order(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=get_main_menu_keyboard())

@router.message(OrderStates.waiting_for_contact, F.contact)
async def receive_contact(message: Message, state: FSMContext):
    data = await state.get_data()
    contact = message.contact.phone_number
    order_id = generate_order_id(message.from_user.id)
    price = calculate_price(data.get("format"), data.get("option"))
    date = datetime.now().strftime("%d.%m.%Y %H:%M")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
    await save_photo(message, data["photo_file_id"], order_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ Google Sheets
    values = [[order_id, contact, data.get("format"), price, date]]
    await google_api.append_sheet_data("–ó–∞–∫–∞–∑—ã", values)

    await state.clear()
    await message.answer(
        f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.\n\n"
        f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n"
        f"–§–æ—Ä–º–∞—Ç: {data.get('format')}\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {price}‚ÇΩ\n"
        f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        reply_markup=get_main_menu_keyboard()
    )
    log_user_event(LogTypesEnum.INFO, message.from_user.id, f"–û—Ñ–æ—Ä–º–ª–µ–Ω –∑–∞–∫–∞–∑ {order_id}")

@router.message(OrderStates.waiting_for_contact)
async def contact_error(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=get_contact_keyboard())

@router.message()
async def unknown_message(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.", reply_markup=get_main_menu_keyboard())