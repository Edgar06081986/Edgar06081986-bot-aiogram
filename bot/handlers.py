from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message,FSInputFile, ReplyKeyboardRemove

from aiogram.fsm.context import FSMContext
from datetime import datetime
from bot.services.google_drive_service import google_drive
import os
from bot.config import Config

from bot.keyboards import (
    get_main_menu_keyboard,
    get_format_keyboard,
    get_paper_type_keyboard,
    get_confirm_keyboard,
    get_contact_keyboard,
    get_vizitki_format_keyboard,
    get_listovki_format_keyboard,
    get_wide_format_keyboard,
    get_cancel_keyboard,
    
)
from bot.states import OrderStates
from bot.logger import log_user_event, LogTypesEnum
from bot.services.google_api_service import google_api
import os
from PIL import Image, ImageDraw
import io

async def save_photo_with_crop_line(message, photo_file_id, order_id):
    file = await message.bot.get_file(photo_file_id)
    file_path = file.file_path
    os.makedirs("images", exist_ok=True)
    destination = f"images/{order_id}.jpg"
    buf = io.BytesIO()
    await message.bot.download_file(file_path, buf)
    buf.seek(0)
    image = Image.open(buf).convert("RGB")
    draw = ImageDraw.Draw(image)
    width, height = image.size
    margin = 10
    line_width = 3
    draw.rectangle(
        [margin, margin, width - margin, height - margin],
        outline="red",
        width=line_width
    )
    image.save(destination, "JPEG")
    return destination

router = Router()

# --- –ü—Ä–∞–π—Å-–ª–∏—Å—Ç ---
PRICE_LIST = {
    "10x15": 20,
    "15x21": 40,
    "–§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã": 100
}

def calculate_price(format_: str, option: str) -> int:
    base_price = PRICE_LIST.get(format_, 0)
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É –∑–∞ –æ–ø—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    return base_price

def generate_order_id(user_id: int) -> str:
    return f"{user_id}_{datetime.now().strftime('%Y%m%d%H%M%S')}"

async def save_photo(message: Message, photo_file_id: str, order_id: str):
    file = await message.bot.get_file(photo_file_id)
    file_path = file.file_path
    os.makedirs("images", exist_ok=True)
    destination = f"images/{order_id}.jpg"
    await message.bot.download_file(file_path, destination)
    return destination

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ü–µ–Ω—Ç—Ä —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )

@router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω—Ç—Ä–µ")
async def info_handler(message: Message):
    await message.answer(
        " FastEdition ‚Äì —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–µ—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ —Å –±—ã—Å—Ç—Ä—ã–º –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º "'\n'
        "üöÄ –°–∫–æ—Ä–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å‚Äì –º—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –≤—Ä–µ–º—è, –ø–æ—ç—Ç–æ–º—É –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–∫–∞–∑—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞."'\n'  
        "üñ®Ô∏è –®–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥:"'\n'  
        "- –ü–µ—á–∞—Ç—å –≤–∏–∑–∏—Ç–æ–∫, –±—É–∫–ª–µ—Ç–æ–≤, –ª–∏—Å—Ç–æ–≤–æ–∫"'\n'  
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –±—Ä–æ—à—é—Ä, –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –∂—É—Ä–Ω–∞–ª–æ–≤"'\n'  
        "- –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª—å–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –∏ –ø–ª–∞–∫–∞—Ç–æ–≤"'\n'  
        "- –ü–µ—á–∞—Ç—å –Ω–∞ —Ñ–æ—Ç–æ–±—É–º–∞–≥–µ, —Å–∞–º–æ–∫–ª–µ—è—â–µ–π—Å—è –ø–ª–µ–Ω–∫–µ"'\n'  
        "- –ü–æ—Å–ª–µ–ø–µ—á–∞—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–∏–≥–æ–≤–∫–∞, —Ñ–∞–ª—å—Ü–æ–≤–∫–∞, —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)"  
        "- –®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å"'\n'
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–∏–Ω–∏–ª–æ–≤—ã—Ö –º–∞–≥–Ω–∏—Ç–æ–≤"'\n'
        "- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∫–ª–µ–µ–∫, —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤"'\n'
        "- –ü–ª–æ—Ç—Ç–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞"'\n'
        "- –ü–µ—á–∞—Ç—å, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"'\n'
        "- –ù–∞—Ä—É–∂–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞"'\n'
        "- –§–æ—Ç–æ–ø–µ—á–∞—Ç—å"'\n'
        "- –§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã"'\n'
        "- –ë—Ä–æ—à—é—Ä–æ–≤–∫–∞, —Ç–≤–µ—Ä–¥—ã–π –ø–µ—Ä–µ–ø–ª–µ—Ç"'\n'
        "- –ø–µ—á–∞—Ç–∏ –∏ —à—Ç–∞–º–ø—ã"'\n'


        "üí° –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ ‚Äì —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ –¥–ª—è –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞."'\n'  

        "üé® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äì –ø–æ–º–æ–∂–µ–º —Å –¥–∏–∑–∞–π–Ω–æ–º –∏–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à–∏ –º–∞–∫–µ—Ç—ã."'\n'  

        "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞, —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–≤—ã–≤–æ–∑."'\n' 

        "–í—ã–±–∏—Ä–∞–π—Ç–µ FastEdition ‚Äì –≥–¥–µ –∫–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –∑–∞–±–æ—Ç–æ–π –æ –≤–∞—à–µ–º —É—Å–ø–µ—Ö–µ!"'\n'  

        "üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: +7 915 134 46 44 (—Ç–µ–ª–µ–≥—Ä–∞–º–º, –≤–∞—Ç—Å–∞–ø) @fastedition (—Ç–µ–ª–µ–≥—Ä–∞–º)"'\n'

    )

@router.message(F.text == "–ù–∞—à–∏ —É—Å–ª—É–≥–∏")
async def services_handler(message: Message):
    # services = await google_api.get_services_list()  # –ï—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    services = """
1. –ü–µ—á–∞—Ç—å –≤–∏–∑–∏—Ç–æ–∫ 
–°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å–Ω—ã–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∏–∑–∏—Ç–∫–∏ –Ω–∞ –º–µ–ª–æ–≤–∞–Ω–Ω–æ–π, –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–π –∏–ª–∏ –ø–ª–æ—Ç–Ω–æ–π –±—É–º–∞–≥–µ. –î–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–ª–Ω–æ—Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å, —Ü–∏—Ñ—Ä–æ–≤–∞—è,–æ—Ñ—Å–µ—Ç —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. –í–∏–∑–∏—Ç–∫–∏ –ª—é–±–æ–π —Ñ–æ—Ä–º—ã, –¥–µ–ª–∞–µ–º –∫–æ–Ω—Ç—É—Ä–Ω—É—é —Ä–µ–∑–∫—É –∏ –ª–∞–º–∏–Ω–∞—Ü–∏—é. 

2. –ü–µ—á–∞—Ç—å –±—É–∫–ª–µ—Ç–æ–≤  
–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±—É–∫–ª–µ—Ç–æ–≤ –ª—é–±–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∏ —Ñ–æ—Ä–º—ã —Å —Ñ–∞–ª—å—Ü–æ–≤–∫–æ–π (—Å–≥–∏–±–æ–º). –ì–ª—è–Ω—Ü–µ–≤–∞—è –∏–ª–∏ –º–∞—Ç–æ–≤–∞—è –ª–∞–º–∏–Ω–∞—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞. 

3. –ü–µ—á–∞—Ç—å –ª–∏—Å—Ç–æ–≤–æ–∫  
–Ø—Ä–∫–∏–µ –ª–∏—Å—Ç–æ–≤–∫–∏ –Ω–∞ –ª—é–±–æ–π –±—É–º–∞–≥–µ (–æ—Ç 130 - 150–≥). –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –ø—Ä–æ–º–æ–∞–∫—Ü–∏–π, —Ä–µ–∫–ª–∞–º—ã –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π. –õ—é–±–æ–π —Ñ–æ—Ä–º—ã –∏ —Ä–∞–∑–º–µ—Ä–∞.

4. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –±—Ä–æ—à—é—Ä  
–ü–µ—á–∞—Ç—å –±—Ä–æ—à—é—Ä —Å –º—è–≥–∫–∏–º –ø–µ—Ä–µ–ø–ª–µ—Ç–æ–º (–Ω–∞ —Å–∫—Ä–µ–ø–∫–µ –∏–ª–∏ –ø—Ä—É–∂–∏–Ω–µ). –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.

5. –ü–µ—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –∏ –∂—É—Ä–Ω–∞–ª–æ–≤  
–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã—Ö –∏–∑–¥–∞–Ω–∏–π —Å –æ–±–ª–æ–∂–∫–æ–π –∏–∑ –ø–ª–æ—Ç–Ω–æ–≥–æ –∫–∞—Ä—Ç–æ–Ω–∞.

6. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª—å–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π  
–ü–µ—Ä–µ–∫–∏–¥–Ω—ã–µ, –∫–∞—Ä–º–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º. –ü–µ—á–∞—Ç—å –Ω–∞ –º–µ–ª–æ–≤–∞–Ω–Ω–æ–π –±—É–º–∞–≥–µ –∏–ª–∏ –ø–ª–æ—Ç–Ω–æ–º –∫–∞—Ä—Ç–æ–Ω–µ.

7. –ü–µ—á–∞—Ç—å –ø–ª–∞–∫–∞—Ç–æ–≤  
–Ø—Ä–∫–∏–µ –ø–æ—Å—Ç–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ê3, –ê2, –ê1 –∏ –±–æ–ª—å—à–µ. –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞, —Ä–µ–∫–ª–∞–º—ã –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.



8. –ü–µ—á–∞—Ç—å –Ω–∞ —Å–∞–º–æ–∫–ª–µ—è—â–µ–π—Å—è –ø–ª–µ–Ω–∫–µ  –∏ –±—É–º–∞–∂–Ω–æ–π —Å–∞–º–æ–∫–ª–µ–π–∫–µ
–ù–∞–∫–ª–µ–π–∫–∏ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã, –¥–µ–∫–æ—Ä–∞, –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏. –î–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–Ω—ã–µ –≤–∏–¥—ã –ø–ª–µ–Ω–∫–∏ (–º–∞—Ç–æ–≤–∞—è, –≥–ª—è–Ω—Ü–µ–≤–∞—è, –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è) –∏ –±—É–º–∞–∂–Ω–∞—è —Å–∞–º–æ–∫–ª–µ–π–∫–∞.

9. –ü–æ—Å–ª–µ–ø–µ—á–∞—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞  
- –õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äì –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–ª–∞–≥–∏ –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π (–º–∞—Ç–æ–≤–∞—è/–≥–ª—è–Ω—Ü–µ–≤–∞—è –ø–ª–µ–Ω–∫–∞).
- –ë–∏–≥–æ–≤–∫–∞ ‚Äì –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–≥–∏–±–æ–≤ –¥–ª—è –±—É–∫–ª–µ—Ç–æ–≤ –∏ –æ—Ç–∫—Ä—ã—Ç–æ–∫.
- –§–∞–ª—å—Ü–æ–≤–∫–∞ ‚Äì –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–µ —Å–≥–∏–±—ã –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π.
- –§–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äì –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–æ–π, —Å–µ—Ä–µ–±—Ä—è–Ω–æ–π –∏–ª–∏ —Ü–≤–µ—Ç–Ω–æ–π —Ñ–æ–ª—å–≥–∏ –¥–ª—è –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞.

10. –®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å  
–ü–µ—á–∞—Ç—å —á–µ—Ä—Ç–µ–∂–µ–π, –±–∞–Ω–Ω–µ—Ä–æ–≤, –ø–æ—Å—Ç–µ—Ä–æ–≤, —Å—Ç–µ–Ω–¥–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤.

11. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–∏–Ω–∏–ª–æ–≤—ã—Ö –º–∞–≥–Ω–∏—Ç–æ–≤  
–Ø—Ä–∫–∏–µ –º–∞–≥–Ω–∏—Ç—ã –Ω–∞ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ —Å –≤–∞—à–∏–º –¥–∏–∑–∞–π–Ω–æ–º. –ì–ª—è–Ω—Ü–µ–≤–∞—è –∏–ª–∏ –º–∞—Ç–æ–≤–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å, —Å—Ç–æ–π–∫–∏–µ –∫—Ä–∞—Å–∫–∏.

12. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∫–ª–µ–µ–∫ –∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤  
–ù–∞–∫–ª–µ–π–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º –∏ —Ä–∞–∑–º–µ—Ä–æ–≤. –í–æ–∑–º–æ–∂–Ω–∞ –ø–ª–æ—Ç—Ç–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞ –ø–æ –∫–æ–Ω—Ç—É—Ä—É –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º.

13. –ü–ª–æ—Ç—Ç–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞  
–¢–æ—á–Ω–∞—è –≤—ã—Ä—É–±–∫–∞ –Ω–∞–∫–ª–µ–µ–∫, —Ç—Ä–∞—Ñ–∞—Ä–µ—Ç–æ–≤, —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–µ–∫–æ—Ä–∞ –∏–∑ –ø–ª–µ–Ω–∫–∏, –∫–∞—Ä—Ç–æ–Ω–∞, –æ—Ä–∞–∫–∞–ª–∞ –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.

14. –ü–µ—á–∞—Ç—å, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ  
–ß–µ—Ä–Ω–æ-–±–µ–ª–∞—è –∏ —Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —É–≤–µ–ª–∏—á–µ–Ω–∏–µ/—É–º–µ–Ω—å—à–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞, –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

15. –ù–∞—Ä—É–∂–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞  
- –ü–µ—á–∞—Ç—å –±–∞–Ω–Ω–µ—Ä–æ–≤, —Ä–∞—Å—Ç—è–∂–µ–∫, –≤—ã–≤–µ—Å–æ–∫.
- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å—Ç–µ–Ω–¥–æ–≤ –∏ —Ç–∞–±–ª–∏—á–µ–∫.
- –ü–µ—á–∞—Ç—å –Ω–∞ –ø–ª–µ–Ω–∫–µ

16. –§–æ—Ç–æ–ø–µ—á–∞—Ç—å  
–ü–µ—á–∞—Ç—å —Ñ–æ—Ç–æ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –Ω–∞ –≥–ª—è–Ω—Ü–µ–≤–æ–π, –º–∞—Ç–æ–≤–æ–π. 

17. –§–æ—Ç–æ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã  
–°—Ä–æ—á–Ω–æ–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç, –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞, –≤–∏–∑—É –∏ –¥—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã.

18. –ë—Ä–æ—à—é—Ä–æ–≤–∫–∞ –∏ —Ç–≤–µ—Ä–¥—ã–π –ø–µ—Ä–µ–ø–ª–µ—Ç  
- –ú—è–≥–∫–∏–π –ø–µ—Ä–µ–ø–ª–µ—Ç (–Ω–∞ —Å–∫–æ–±–µ, –ø—Ä—É–∂–∏–Ω–µ –∏–ª–∏ —Ç–µ—Ä–º–æ–∫–ª–µ–µ).
- –¢–≤–µ—Ä–¥—ã–π –ø–µ—Ä–µ–ø–ª–µ—Ç –Ω–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –∫–∞–Ω–∞–ª.

19. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–µ—á–∞—Ç–µ–π –∏ —à—Ç–∞–º–ø–æ–≤  
- –ü–µ—á–∞—Ç–∏ –¥–ª—è –ò–ü –∏ –û–û–û.
- –§–∞–∫—Å–∏–º–∏–ª–µ.
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏ —Ä—É—á–Ω–∞—è –æ—Å–Ω–∞—Å—Ç–∫–∏.

20. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –º–∞–∫–µ—Ç–æ–≤
-–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
- –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–æ–≤
- –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –º–∞–∫–µ—Ç–æ–≤
- –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
"""
    await message.answer(f"–ù–∞—à–∏ —É—Å–ª—É–≥–∏:\n{services}")

# --- –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–∫–∞–∑–∞ ---

@router.message(F.text == "–ó–∞–∫–∞–∑–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ")
async def start_order(message: Message, state: FSMContext):
    await state.set_state(OrderStates.choosing_format)
    await message.answer(
        "–í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞:",
        reply_markup=get_format_keyboard()
    )

# @router.message(OrderStates.choosing_format, F.text)
# async def choose_format(message: Message, state: FSMContext):
#     format_ = message.text
#     if format_ not in ["–õ–∏—Å—Ç–æ–≤–∫–∏", "–í–∏–∑–∏—Ç–∫–∏", "–®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å", "–ñ—É—Ä–Ω–∞–ª—ã,–ë—Ä–æ—à—é—Ä—ã"]:
#         await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=get_format_keyboard())
#         return
#     await state.update_data(format=format_)
#     await state.set_state(OrderStates.choosing_options)
   
    
@router.message(OrderStates.choosing_format, F.text == "–õ–∏—Å—Ç–æ–≤–∫–∏")
async def choose_listovki(message: Message, state: FSMContext):
    await message.answer(
        """
        –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ CMYK,300dpi
        –ë—É–º–∞–≥–∞ (130-150–≥.)
        """
        )
    
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ª–∏—Å—Ç–æ–≤–∫–∏:",
        reply_markup=get_listovki_format_keyboard()
    )


@router.message(OrderStates.choosing_format, F.text == "–í–∏–∑–∏—Ç–∫–∏")
async def choose_vizitki(message: Message, state: FSMContext):
    await message.answer(
        "5–º–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—è —Å –∫–∞–∂–¥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ CMYK, 300dpi"
    )
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–∏–∑–∏—Ç–∫–∏:",
        reply_markup=get_vizitki_format_keyboard()
    )
    

@router.message(OrderStates.choosing_format, F.text == "–®–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å")
async def choose_wide_format(message: Message, state: FSMContext):
    
    await message.answer(
        "‚ÑπÔ∏è –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (–ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–∞)"
    )
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —à–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω–æ–π –ø–µ—á–∞—Ç–∏:",
        reply_markup=get_wide_format_keyboard()
    )

@router.message(OrderStates.choosing_format, F.text == "–ñ—É—Ä–Ω–∞–ª—ã,–ë—Ä–æ—à—é—Ä—ã")
async def choose_journals(message: Message, state: FSMContext):
    await state.update_data(format="–ñ—É—Ä–Ω–∞–ª—ã,–ë—Ä–æ—à—é—Ä—ã")
    await state.set_state(OrderStates.choosing_options)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É–º–∞–≥–∏ –¥–ª—è –∂—É—Ä–Ω–∞–ª–æ–≤ –∏–ª–∏ –±—Ä–æ—à—é—Ä:",
        reply_markup=get_paper_type_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@router.message(OrderStates.choosing_format, F.text.in_([
    "A7 (109—Ö78 –º–º)", "A6 (152—Ö109 –º–º)", "A5 (214—Ö148 –º–º)", "A4 (301—Ö214 –º–º)",
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∏–∑–∏—Ç–∫–∏ (94x54 –º–º)", "–ï–≤—Ä–æ–≤–∏–∑–∏—Ç–∫–∏ (89x59 –º–º)",
    "A2 (420x594 –º–º)", "A1 (594x841 –º–º)", "A0 (841x1189 –º–º)",
]))
async def choose_any_format(message: Message, state: FSMContext):
    await state.update_data(format=message.text)
    await state.set_state(OrderStates.choosing_options)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É–º–∞–≥–∏:",
        reply_markup=get_paper_type_keyboard()
    )


@router.message(OrderStates.choosing_options, F.text.in_(["–ì–ª—è–Ω—Ü–µ–≤–∞—è", "–ú–∞—Ç–æ–≤–∞—è", "–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã"]))
async def choose_paper_type(message: Message, state: FSMContext):
    await state.update_data(option=message.text)
    await state.set_state(OrderStates.uploading_image)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–µ—á–∞—Ç–∏.",
        reply_markup=get_cancel_keyboard()
    )



@router.message(OrderStates.uploading_image, F.photo)
async def upload_image(message: Message, state: FSMContext):
    photo = message.photo[-1]
    await state.update_data(photo_file_id=photo.file_id)
    await state.set_state(OrderStates.preview_and_confirm)
    data = await state.get_data()
    price = calculate_price(data.get("format"), data.get("option"))
    order_id = generate_order_id(message.from_user.id)
    processed_path = await save_photo_with_crop_line(message, photo.file_id, order_id)
    await message.answer_photo(
    FSInputFile(processed_path),
    caption=f"–í–æ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–≥–æ —Ñ–æ—Ç–æ —Å –ª–∏–Ω–∏–µ–π –æ–±—Ä–µ–∑–∫–∏.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {price}‚ÇΩ\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑?",
    reply_markup=get_confirm_keyboard()
)

@router.message(OrderStates.preview_and_confirm, F.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
async def confirm_order(message: Message, state: FSMContext):
    await state.set_state(OrderStates.waiting_for_contact)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=get_contact_keyboard()
    )

@router.message(OrderStates.preview_and_confirm, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.choosing_format, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.choosing_options, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.uploading_image, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@router.message(OrderStates.waiting_for_contact, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def cancel_order(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=get_main_menu_keyboard())

@router.message(OrderStates.waiting_for_contact, F.contact)
async def receive_contact(message: Message, state: FSMContext):
    data = await state.get_data()
    contact = message.contact.phone_number
    order_id = generate_order_id(message.from_user.id)
    price = calculate_price(data.get("format"), data.get("option"))
    date = datetime.now().strftime("%d.%m.%Y %H:%M")
     # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ –≤ Google Drive

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ
    local_path = await save_photo(message, data["photo_file_id"], order_id)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ Google Drive
    image_link = google_drive.upload_file(
        file_path=local_path,
        file_name=f"{order_id}.jpg",
        folder_id=Config.GOOGLE_FOLDER_IMAGES_ID
    )

    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    os.remove(local_path)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ Google Sheets
    values = [[order_id, contact, data.get("format"), price, date,image_link]]
    await google_api.append_sheet_data("–ó–∞–∫–∞–∑—ã", values)

    await state.clear()
    await message.answer(
        f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.\n\n"
        f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n"
        f"–§–æ—Ä–º–∞—Ç: {data.get('format')}\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {price}‚ÇΩ\n"
        f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        reply_markup=get_main_menu_keyboard()
    )
    log_user_event(LogTypesEnum.INFO, message.from_user.id, f"–û—Ñ–æ—Ä–º–ª–µ–Ω –∑–∞–∫–∞–∑ {order_id}")

@router.message(OrderStates.waiting_for_contact)
async def contact_error(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=get_contact_keyboard())

@router.message()
async def unknown_message(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.", reply_markup=get_main_menu_keyboard())